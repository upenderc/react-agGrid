{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/e139827/sts_workspace/gitrepo_poc/react_tutorial/hello-react/src/PocTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport axios from 'axios';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nfunction PocTable() {\n  _s();\n\n  const [gridApi, setGridApi] = useState(null);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n  const [rowData, setRowData] = useState([]);\n  useEffect(() => {\n    axios.get(`http://localhost:8080/mockList`).then(res => {\n      console.log(res.data);\n      setRowData(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ag-theme-alpine\",\n    style: {\n      height: 400,\n      width: 600\n    },\n    children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n      rowData: rowData,\n      children: [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"col1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"col2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"col3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PocTable, \"PgAXam5wdBEI/8NysrRhfCncDJ4=\");\n\n_c = PocTable;\nexport default PocTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PocTable\");","map":{"version":3,"sources":["/Users/e139827/sts_workspace/gitrepo_poc/react_tutorial/hello-react/src/PocTable.js"],"names":["React","useState","useEffect","AgGridColumn","AgGridReact","axios","PocTable","gridApi","setGridApi","gridColumnApi","setGridColumnApi","rowData","setRowData","get","then","res","console","log","data","catch","err","height","width"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,eAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,2CAAP;AACA,OAAO,mDAAP;;AACA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,IAAD,CAAlD;AAEA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAI;AACVG,IAAAA,KAAK,CAACQ,GAAN,CAAW,gCAAX,EACCC,IADD,CACMC,GAAG,IAAG;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACbN,MAAAA,UAAU,CAACG,GAAG,CAACG,IAAL,CAAV;AACC,KAHD,EAICC,KAJD,CAIOC,GAAG,IAAE;AACRJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACH,KAND;AAOH,GARQ,EAQP,EARO,CAAT;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,KAAK,EAAG;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KAAzC;AAAA,2BACI,QAAC,WAAD;AACI,MAAA,OAAO,EAAEX,OADb;AAAA,8BAEI,QAAC,YAAD;AAAc,QAAA,KAAK,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,YAAD;AAAc,QAAA,KAAK,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,YAAD;AAAc,QAAA,KAAK,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAzBQL,Q;;KAAAA,Q;AA0BT,eAAeA,QAAf","sourcesContent":["import React, { useState,useEffect } from 'react';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport axios from 'axios'\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nfunction PocTable() {\n    const [gridApi, setGridApi] = useState(null);\n    const [gridColumnApi, setGridColumnApi] = useState(null);\n\n    const [rowData, setRowData] = useState([]);\n    useEffect(()=>{\n        axios.get(`http://localhost:8080/mockList`)\n        .then(res =>{console.log(res.data);\n        setRowData(res.data);\n        })\n        .catch(err=>{\n            console.log(err);\n        })\n    },[])\n    return (\n        <div className=\"ag-theme-alpine\" style={ { height: 400, width: 600 } }>\n            <AgGridReact\n                rowData={rowData}>\n                <AgGridColumn field=\"col1\"></AgGridColumn>\n                <AgGridColumn field=\"col2\"></AgGridColumn>\n                <AgGridColumn field=\"col3\"></AgGridColumn>\n            </AgGridReact>\n        </div>\n    )\n    \n}\nexport default PocTable;"]},"metadata":{},"sourceType":"module"}